openapi: "3.0.0"
info:
  version: "0.0.7"
  title: "Champlain API Documentation"
  description: "Champlain Open API Documentation."
  contact:
    name: Champlain API
    url: "https://github.com/champlain-api/"
servers:
  - url: "http://localhost:3000/"
security:
  - ApiKey: []

tags:
  - name: shuttle
    description: Endpoints relating to the shuttle service
  - name: announcements
    description: Endpoints relating to announcements
  - name: faculty
    description: Endpoints related to faculty

paths:
  "/shuttles":
    get:
      tags:
        - shuttle
      summary: "Get information relating to all shuttles"
      security: []
      parameters:
        - in: path
          name: updatedWithin
          description: Only show shuttles updated within the specified integer.
          required: true
          schema:
            type: integer
            minimum: 0
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/shuttle"
        404:
          description: "`updatedWithin` is invalid"
        500:
          description: "An error occurred"

  "/shuttles/{shuttleId}":
    get:
      tags:
        - shuttle
      summary: "Get information relating to specific shuttle."
      security: []
      parameters:
        - in: path
          name: shuttleId
          description: "ID of the shuttle. Any number is accepted starting from 0."
          required: true
          schema:
            type: integer
            minimum: 0
      responses:
        404:
          description: "Shuttle cannot be found."
        400:
          description: "Invalid shuttle ID specified."
        200:
          # TODO: Make schema for specific shuttle
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/shuttle"

  "/shuttle":
    post:
      tags:
        - shuttle
      summary: "Create a new shuttle"
      description: "Requires the `SHUTTLE_EDIT` scope."
      security:
        - ApiKey: []
      parameters:
        - in: query
          name: lat
          description: "Latitude of the shuttle."
          required: false
          schema:
            type: integer
            default: 0
        - in: query
          name: lon
          description: "Longitude of the shuttle."
          required: false
          schema:
            type: integer
            default: 0
        - in: query
          name: mph
          description: "MPH of the shuttle."
          required: false
          schema:
            type: integer
            default: 0
        - in: query
          name: direction
          description: "Direction of the shuttle."
          schema:
            type: string
            default: "0"
      responses:
        500:
          description: "Unable to create shuttle."
        400:
          description: "Unable to create shuttle. Please check that all fields are valid."
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/shuttle"

  "/shuttle/{shuttleId}":
    put:
      tags:
        - shuttle
      summary: "Update a shuttle."
      description: "Requires the `SHUTTLE_EDIT` scope."
      security:
        - ApiKey: [ ]
      parameters:
        - in: path
          name: shuttleId
          description: "ID of the shuttle. Any number is accepted starting from 0."
          required: true
          schema:
            type: integer
            minimum: 0
        - in: query
          name: lat
          description: "Latitude of the shuttle."
          required: false
          schema:
            type: integer
            default: 0
        - in: query
          name: lon
          description: "Longitude of the shuttle."
          required: false
          schema:
            type: integer
            default: 0
        - in: query
          name: mph
          description: "MPH of the shuttle."
          required: false
          schema:
            type: integer
            default: 0
        - in: query
          name: direction
          description: "Direction of the shuttle."
          schema:
            type: string
            default: "0"
      responses:
        400:
          description: "The shuttle cannot be updated."
    delete:
      tags:
        - shuttle
      summary: "Delete a shuttle."
      description: "Requires the `SHUTTLE_EDIT` scope."
      security:
        - ApiKey: []
      parameters:
        - in: path
          name: shuttleId
          description: "ID of the shuttle. Any number is accepted starting from 0."
          required: true
          schema:
            type: integer
      responses:
        404:
          description: "Invalid shuttleId."

  "/announcements":
    get:
      tags:
        - announcements
      summary: "Get current announcements."
      security: []
      parameters:
        - in: query
          name: type
          description: "Optional type of announcement to fetch."
          schema:
            type: string
            enum:
              - Mobile
              - Shuttle
              - WWW
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: success
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/announcements"
        400:
          description: "Invalid announcement type specified."
    post:
      tags:
        - announcements
      summary: "Make a new announcement"
      description: "Requires the `ANNOUNCEMENTS_EDIT` scope."
      security:
        - ApiKey: []
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: success
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/announcements"
        400:
          description: "Invalid fields provided."
        500:
          description: "Unable to create announcement."
  "/announcements/{id}":
    get:
      tags:
        - announcements
      summary: "Get current announcement by ID."
      security: [ ]
      parameters:
        - in: path
          name: id
          description: "Announcement ID."
          schema:
            type: integer
            required: true
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: success
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/announcements"
        404:
            description: "Invalid ID."
    put:
      tags:
        - announcements
      summary: "Edit an announcement"
      description: "Requires the `ANNOUNCEMENTS_EDIT` scope."
      security:
        - ApiKey: []
      parameters:
        - in: path
          name: id
          description: "Announcement ID."
          required: true
          schema:
            type: integer
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: success
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/announcements"
    delete:
      tags:
        - announcements
      summary: "Delete an announcement"
      description: "Requires the `ANNOUNCEMENTS_EDIT` scope."
      security:
        - ApiKey: []
      parameters:
        - in: path
          name: id
          description: "Announcement ID."
          required: true
          schema:
            type: integer
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: success
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/announcements"
        404:
          description: "Invalid ID."

  "/faculty":
    get:
      tags:
        - faculty
      summary: "Get all faculty data."
      security: []
      description: "Returns a JSON list of all faculty members, including their title, departments, and photo URL."
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/faculty"

  "/faculty/{name}":
    get:
      tags:
        - faculty
      summary: "Get a faculty member by name."
      security: []
      description: "Returns a faculty member including their title, departments, and photo URL."
      parameters:
        - in: path
          name: name
          description: "The name of the faculty member."
          required: true
          schema:
            type: string
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/faculty"
        404:
          description: "Faculty member not found."
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Faculty member not found."

  "/faculty/department/{departmentName}":
    get:
      tags:
        - faculty
      summary: "Get faculty members by department."
      security: []
      description: "Returns all faculty members within a department including their title and photo URL."
      parameters:
        - in: path
          name: departmentName
          example: "Core Division"
          description: "The name of the department"
          required: true
          schema:
            type: string
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/faculty"
        404:
          description: "No faculty members found for this department."
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "No faculty members found for this department."

components:
  securitySchemes:
    API_KEY:
      type: apiKey
      in: header
      name: X-CHAMPLAIN-API-KEY
  schemas:
    announcements:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        summary:
          type: string
          description: The announcement text
        style:
          type: string
          enum:
            - info
            - emergency
        type:
          type: string
          enum:
            - Mobile
            - Shuttle
            - WWW
    shuttle:
      type: object
      properties:
        date_time:
          type: string
          format: date-time
        unitid:
          type: integer
          minimum: 0
          description: Shuttle number
        lat:
          type: number
          format: double
          description: Latitude
        lon:
          type: number
          format: double
          description: Longitude
        mph:
          type: integer
        direction:
          type: number
    faculty:
      type: object
      properties:
        name:
          description: "The faculty member's name"
          type: string
          example: "John Business"
        title:
          description: "The faculty member's title"
          type: string
          example: "Adjunct Instructor"
        departments:
          description: "The department(s) the faculty member is part of"
          type: array
          items:
            type: string
            example: "Stiller School of Business"
        imageUrl:
          type: string
          format: uri
