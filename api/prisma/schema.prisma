// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id      Int      @id @default(autoincrement())
  email   String
  apiKeys apiKey[]
}

model Announcement {
  id          Int                @id @default(autoincrement())
  updated     DateTime           @default(now()) @updatedAt @db.Timestamptz()
  title       String             @default("Champlain College Announcement")
  description String             @default("")
  type        AnnouncementType[] @default([WEB])
  style       AnnouncementStyle  @default(INFO)
}

enum AnnouncementStyle {
  EMERGENCY
  INFO
}

enum AnnouncementType {
  WEB
  SHUTTLE
  MOBILE
}

model Shuttle {
  id        Int      @id @default(autoincrement())
  updated   DateTime @updatedAt @db.Timestamptz()
  lat       Float    @default(0)
  lon       Float    @default(0)
  mph       Int      @default(0)
  direction Int      @default(0)
}

model apiKey {
  id     Int            @id @default(autoincrement())
  key    String         @unique
  scopes APIKeyScopes[]
  user   User           @relation(fields: [userID], references: [id])
  userID Int
}

model Faculty {
  id          Int      @id @default(autoincrement())
  updated     DateTime @updatedAt @db.Timestamptz(6)
  name        String   @default("")
  title       String   @default("")
  departments String[] @default([])
  imageURL    String   @default("https://www.champlain.edu/app/uploads/2023/10/cc-people-placeholder-400x400.jpg")
}

enum APIKeyScopes {
  ANNOUNCEMENTS_EDIT
  SHUTTLE_EDIT
  FACULTY_EDIT
  CLUB_EDIT
}


model Club {
  id            Int       @id @default(autoincrement())
  updated       DateTime  @updatedAt @db.Timestamptz()
  name          String    @unique
  description   String
  email         String
  primaryContact String
  clubInfo      ClubInfo?
}

model ClubInfo {
  id        Int       @id @default(autoincrement())
  type      String
  semester  String[]
  clubId    Int       @unique
  club      Club      @relation(fields: [clubId], references: [id])
  officers  Officer[]
}

model Officer {
  id         Int       @id @default(autoincrement())
  name       String
  title      String
  clubInfo   ClubInfo  @relation(fields: [clubInfoId], references: [id])
  clubInfoId Int
}