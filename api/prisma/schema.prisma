//
// Copyright 2025 Champlain API Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id      Int      @id @default(autoincrement())
  email   String
  apiKeys apiKey[]
}

model Announcement {
  id          Int                @id @default(autoincrement())
  updated     DateTime           @default(now()) @updatedAt @db.Timestamptz(6)
  title       String             @default("Champlain College Announcement")
  description String             @default("")
  type        AnnouncementType[] @default([WEB])
  style       AnnouncementStyle  @default(INFO)
}

model Shuttle {
  id        Int      @id @default(autoincrement())
  updated   DateTime @updatedAt @db.Timestamptz(6)
  lat       Float    @default(0)
  lon       Float    @default(0)
  mph       Int      @default(0)
  direction Int      @default(0)
}

model apiKey {
  id     Int            @id @default(autoincrement())
  key    String         @unique
  scopes APIKeyScopes[]
  userID Int
  user   User           @relation(fields: [userID], references: [id])
}

model Faculty {
  id          Int      @id @default(autoincrement())
  updated     DateTime @updatedAt @db.Timestamptz(6)
  name        String   @default("")
  title       String   @default("")
  departments String[] @default([])
  imageURL    String   @default("https://www.champlain.edu/app/uploads/2023/10/cc-people-placeholder-400x400.jpg")
}

model Competencies {
  id          Int      @id @default(autoincrement())
  updated     DateTime @updatedAt @db.Timestamptz(6)
  competency  String   @default("")
  description String   @default("")
  criteria    String[] @default([])
  information String   @default("")
}

model Housing {
  id       Int      @id @default(autoincrement())
  updated  DateTime @updatedAt @db.Timestamptz(6)
  name     String   @default("")
  type     String   @default("")
  students Int      @default(0)
  distance String   @default("")
  address  String   @default("")
  imageURL String   @default("")
}

model Building {
  id       Int    @id @default(autoincrement())
  name     String @default("")
  location String @default("")
  hours    Json
}

model Course {
  id              Int      @id @default(autoincrement())
  title           String   @default("")
  number          String   @default("")
  credit          Int      @default(0)
  openseats       Int      @default(0)
  days            String?
  times           String?
  instructor_name String?
  description     String?
  room            String?
  subject         String?
  type            String?
  prereq          String?
  start_date      DateTime @db.Timestamptz(6)
  end_date        DateTime @db.Timestamptz(6)
  semesterId      Int
  semester        Semester @relation(fields: [semesterId], references: [id])
}

model Semester {
  id      Int      @id @default(autoincrement())
  name    String   @default("")
  year    String   @default("")
  date    String   @default("")
  courses Course[]
}

enum AnnouncementStyle {
  EMERGENCY
  INFO
}

enum AnnouncementType {
  WEB
  SHUTTLE
  MOBILE
}

enum APIKeyScopes {
  ANNOUNCEMENTS_EDIT
  SHUTTLE_EDIT
  FACULTY_EDIT
  HOUSING_EDIT
  COMPETENCIES_EDIT
  BUILDING_EDIT
  COURSES_EDIT
  SEMESTER_EDIT
}
